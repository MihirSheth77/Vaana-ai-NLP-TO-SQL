version: '3.8'

services:
  nginx:
    image: nginx:alpine
    ports:
      - "8082:80"
    configs:
      - source: nginx_config
        target: /etc/nginx/nginx.conf
    depends_on:
      - vanna-ai
    restart: unless-stopped
    labels:
      - "coolify.port=8082"

  vanna-ai:
    build: .
    ports:
      - "9000:8000"  # Backend API (9000 external -> 8000 internal)
      - "9001:8501"  # Frontend UI (9001 external -> 8501 internal)
    environment:
      # Database connection
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      SESSION_DATABASE_URL: ${SESSION_DATABASE_URL}
      
      # Qdrant Cloud
      QDRANT_URL: ${QDRANT_URL}
      QDRANT_API_KEY: ${QDRANT_API_KEY}
      
      # Optional: Set Python unbuffered for better logs
      PYTHONUNBUFFERED: "1"
    
    volumes:
      # Persist model storage and connections
      - vanna_storage:/app/vanna_storage
    
    restart: unless-stopped
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

configs:
  nginx_config:
    content: |
      events {
          worker_connections 1024;
      }

      http {
          upstream vanna_frontend {
              server vanna-ai:8501;
          }
          
          upstream vanna_api {
              server vanna-ai:8000;
          }

          server {
              listen 80;
              server_name _;
              
              # Proxy frontend requests
              location / {
                  proxy_pass http://vanna_frontend;
                  proxy_set_header Host $$host;
                  proxy_set_header X-Real-IP $$remote_addr;
                  proxy_set_header X-Forwarded-For $$proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $$scheme;
                  
                  # WebSocket support for Streamlit
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $$http_upgrade;
                  proxy_set_header Connection "upgrade";
              }
              
              # Proxy API requests
              location /api/ {
                  proxy_pass http://vanna_api/;
                  proxy_set_header Host $$host;
                  proxy_set_header X-Real-IP $$remote_addr;
                  proxy_set_header X-Forwarded-For $$proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $$scheme;
              }
          }
      }

volumes:
  vanna_storage:
    driver: local 